Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/guy/Gits/Nach-Riddles/app/NachRiddles/app/components/ComponentBookSelector.js',
    _class,
    _temp;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

var _reactNavigation = require('react-navigation');

var _ComponentRiddles = require('./ComponentRiddles');

var _ComponentRiddles2 = _interopRequireDefault(_ComponentRiddles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  ComponentLevels: {
    displayName: 'ComponentLevels'
  },
  RiddlesScreen: {
    displayName: 'RiddlesScreen'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/guy/Gits/Nach-Riddles/app/NachRiddles/app/components/ComponentBookSelector.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

var ComponentLevels = _wrapComponent('ComponentLevels')(function (_React$Component) {
  _inherits(ComponentLevels, _React$Component);

  function ComponentLevels() {
    _classCallCheck(this, ComponentLevels);

    return _possibleConstructorReturn(this, (ComponentLevels.__proto__ || Object.getPrototypeOf(ComponentLevels)).apply(this, arguments));
  }

  _createClass(ComponentLevels, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var navigate = this.props.navigation.navigate;

      return _react3.default.createElement(
        _reactNative.ScrollView,
        { contentContainerStyle: styles.contentContainer, __source: {
            fileName: _jsxFileName,
            lineNumber: 12
          }
        },
        _react3.default.createElement(
          _reactNative.View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 13
            }
          },
          _react3.default.createElement(
            _reactNative.View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 14
              }
            },
            _react3.default.createElement(
              _reactNative.Text,
              { style: styles.titleText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 15
                }
              },
              '\u05E9\u05DC\u05D1\u05D9\u05DD'
            )
          ),
          _react3.default.createElement(
            _reactNative.TouchableOpacity,
            { onPress: function onPress() {
                return _this2.props.navigation.navigate('Riddles');
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 18
              }
            },
            _react3.default.createElement(
              _reactNative.View,
              { style: styles.container2, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 19
                }
              },
              _react3.default.createElement(
                _reactNative.Image,
                {
                  style: styles.backdrop,
                  source: require("../img/open-book2.png"), __source: {
                    fileName: _jsxFileName,
                    lineNumber: 20
                  }
                },
                _react3.default.createElement(
                  _reactNative.View,
                  { style: styles.backdropView, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 23
                    }
                  },
                  _react3.default.createElement(
                    _reactNative.Text,
                    { style: styles.headline, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 24
                      }
                    },
                    '\u05E1\u05E4\u05E8 \u05D9\u05D4\u05D5\u05E9\u05E2'
                  )
                )
              )
            )
          )
        )
      );
    }
  }]);

  return ComponentLevels;
}(_react3.default.Component));

exports.default = ComponentLevels;

var RiddlesScreen = _wrapComponent('RiddlesScreen')((_temp = _class = function (_React$Component2) {
  _inherits(RiddlesScreen, _React$Component2);

  function RiddlesScreen() {
    _classCallCheck(this, RiddlesScreen);

    return _possibleConstructorReturn(this, (RiddlesScreen.__proto__ || Object.getPrototypeOf(RiddlesScreen)).apply(this, arguments));
  }

  _createClass(RiddlesScreen, [{
    key: 'render',
    value: function render() {
      return _react3.default.createElement(
        _reactNative.View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 91
          }
        },
        _react3.default.createElement(_ComponentRiddles2.default, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 92
          }
        })
      );
    }
  }]);

  return RiddlesScreen;
}(_react3.default.Component), _class.navigationOptions = {
  title: 'אביעה חידות מני קדם'
}, _temp));

var NachRiddles = (0, _reactNavigation.StackNavigator)({
  Riddles: { screen: RiddlesScreen }
}, { headerMode: 'screen' });

var styles = _reactNative.StyleSheet.create({
  titleText: {
    height: 60,
    color: 'white',
    fontWeight: 'bold',
    fontSize: 45,
    textAlign: 'center',
    backgroundColor: 'steelblue'
  },
  container2: {
    margin: 5,
    justifyContent: 'flex-start',
    alignItems: 'center',
    backgroundColor: '#2196F3',
    height: 90,
    width: 350
  },
  backdrop: {
    margin: 5,
    padding: 0,
    width: 340,
    height: 80
  },
  backdropView: {
    padding: 0,
    width: 340,
    height: 80,
    backgroundColor: 'rgba(176,224,230, 0.8)'
  },
  headline: {
    fontWeight: 'bold',
    fontSize: 60,
    alignItems: 'center',
    textAlign: 'center',
    backgroundColor: 'rgba(0,0,0,0)',
    color: 'black'
  }
});

_reactNative.AppRegistry.registerComponent('ComponentLevels', function () {
  return ComponentLevels;
});